t = int(input())
#여러개의 테스트가 주어지므로, 각각을 처리합니다.
for tc in range(1, t+1):
    n = int(input())
    dist = [[0,1],[1,0],[0,-1],[-1,0]]
    snail = [[0]*n for _ in range(n)] # arr = [list(map(int, input().split())) for _ in range(n)] 이걸 안 쓰더라
    num = 1
    d = 0
    x, y = 0, -1 # 시작위치
    while num <= (n*n):
        nx, ny = x + dist[d][0], y + dist[d][1]
        if 0 <= nx < n and 0 <= ny < n and snail[nx][ny] == 0 :
            snail[nx][ny] = num # 숫자 넣어주기
            num += 1 # 숫자 증가
            x, y = nx, ny # 현재 위치 갱신
        # 달팽이 크기에서 벗어났거나, 해당 위치에 이미 숫자가 부여되어 있는 경우
        # k 값 조정을 통해 방향을 바꾼다
        else:
            d = (d+1) % 4 # 0,1,2,3 으로만 움직일 수 있게 나머지를 구함
    print(f'#{tc}')
    for row in snail:
        print(*row)


T = int(input())
 
di = [0, 1, 0, -1] 
dj = [1, 0, -1, 0]   
 
for tc in range(1, 1+T):
    N = int(input())
    arr = [[0]*N for _ in range(N)]
    r, c = 0, 0
    dist = 0
 
    for n in range(1, N*N+1):
        arr[r][c] = n
        r+= di[dist]
        c+= dj[dist]
         
        if r < 0 or c < 0 or r>=N or c>=N or arr[r][c] != 0 :
            r-= di[dist]
            c-= dj[dist]
            dist = (1+dist)%4
 
            r+= di[dist]
            c+= dj[dist]
    print(f'#{tc}')
 
    for row in arr:
        print(*row)
